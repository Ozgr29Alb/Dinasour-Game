library ieee;
use ieee.std_logic_1164.ALL;
use ieee.std_logic_UNSIGNED.ALL;

entity segment_driver is
    Port ( display1 : in  std_logic_vector (6 downto 0);
           display2 : in  std_logic_vector (6 downto 0);
           display3 : in  std_logic_vector (6 downto 0);
           display4 : in  std_logic_vector (6 downto 0);
           clock : in  std_logic;
     disp_seg : out  std_logic_vector (6 downto 0);
     disp_ena : out  std_logic_vector (3 downto 0));
end segment_driver;

architecture Behavioral of segment_driver is

signal cnt : std_logic_vector (1 downto 0);

begin
   process (clock) begin
      if (rising_edge(clock)) then
         cnt <= cnt + 1;
         if (cnt = "11") then
            cnt <= "00";
         end if;
     case (cnt) is
        when "00" =>
           disp_seg <= display1;
           disp_ena <= "1110";
        when "01" =>
           disp_seg <= display2;
           disp_ena <= "1101";
        when "10" =>
           disp_seg <= display3;
           disp_ena <= "1011";
        when "11" =>
           disp_seg <= display4;
           disp_ena <= "0111";
        when others =>
           disp_seg <= (others => '0');
           disp_ena <= "0000";
     end case;
      end if;
  end process;
  

end Behavioral;
